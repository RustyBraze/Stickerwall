let config={debug:{enable:true,showWalls:false,showBounds:false,showLabels:false,showWorld:false,showStickers:false,showStickerSize:false,showPhysics:false,showSticker:false,showStickerVelocity:false,showStickerPosition:false,colors:{walls:"#ee00ff",centerWall:"#ff0000",bounds:"#00ff00",center:"#ff0000",text:"#ffffff"}},bot:{username:"",fullName:""},stickers:{maxCount:150,maxCountOffset:20,sizeMax:180,sizeMin:100,hitBoxFactor:.8,physics:{enable:true,friction:.01,frictionAir:.01,restitution:.5,inertia:0,inverseInertia:0,initialSpeed:.2}},world:{enableSleeping:true,walls:{colisionEffectEnable:true,forceRestitution:0,enableCentralBlock:true},gravity:{enable:false,x:0,y:0,shiftEnable:false,shiftTime:30,stopTime:10,shiftFactor:.001},drift:{enable:false,force:5e-4}},animations:{flyIn:{duration:1e3,initialScale:.1,finalScale:1,initialAlpha:.01,finalAlpha:1},protection:{timeout:5e3,checkInterval:1e4}}};const Debug={LEVELS:{ERROR:"error",WARN:"warn",INFO:"info",DEBUG:"debug"},config:{enabled:config.debug.enable,level:"debug",prefix:"",features:{messages:true,network:true,physics:true,stickers:true,storage:true}},log(feature,level,...args){if(!this.config.enabled||!this.config.features[feature.toLowerCase()]){return}const timestamp=(new Date).toISOString().split("T")[1].split(".")[0];const prefix=`${this.config.prefix} [${timestamp}] [${feature.toUpperCase()}]`;switch(level){case this.LEVELS.ERROR:console.error(prefix,...args);break;case this.LEVELS.WARN:console.warn(prefix,...args);break;case this.LEVELS.INFO:console.info(prefix,...args);break;case this.LEVELS.DEBUG:console.debug(prefix,...args);break;default:console.log(prefix,...args)}},error(feature,...args){this.log(feature,this.LEVELS.ERROR,...args)},warn(feature,...args){this.log(feature,this.LEVELS.WARN,...args)},info(feature,...args){this.log(feature,this.LEVELS.INFO,...args)},debug(feature,...args){this.log(feature,this.LEVELS.DEBUG,...args)}};const canvas=document.getElementById("stickerCanvas");const canvas_context=canvas.getContext("2d");let stickers=[];let StickerSize=config.stickers.maxCount;let worldWallsCreatedFlag=false;let worldWalls=[];const StorageManager={STORAGE_KEY:"wall_stickers",saveSticker(sticker){let stickersData=this.getAllStickers();stickersData.push({id:sticker.id,path:sticker.img.src,position:sticker.body.position,angle:sticker.body.angle,velocity:sticker.body.velocity});localStorage.setItem(this.STORAGE_KEY,JSON.stringify(stickersData));Debug.debug("storage","Saved sticker:",sticker.id)},removeSticker(stickerId){let stickersData=this.getAllStickers();stickersData=stickersData.filter((s=>s.id!==stickerId));localStorage.setItem(this.STORAGE_KEY,JSON.stringify(stickersData));Debug.debug("storage","Removed sticker:",stickerId)},getAllStickers(){const data=localStorage.getItem(this.STORAGE_KEY);return data?JSON.parse(data):[]},clearStickers(){localStorage.removeItem(this.STORAGE_KEY);Debug.info("storage","Cleared all stickers from storage")}};const AnimationManager={animatingStickers:new Map,startAnimation(sticker){const startTime=performance.now();this.animatingStickers.set(sticker.id,{startTime:startTime,initialPosition:{...sticker.body.position},initialScale:config.animations.flyIn.initialScale,lastUpdateTime:startTime,isAnimating:true})},updateAnimations(currentTime){this.animatingStickers.forEach(((animation,stickerId)=>{const sticker=stickers.find((s=>s.id===stickerId));if(!sticker){this.animatingStickers.delete(stickerId);Debug.warn("animations",`Sticker not found, removing animation: ${stickerId}`);return}const elapsed=currentTime-animation.startTime;const timeSinceLastUpdate=currentTime-animation.lastUpdateTime;if(elapsed>=config.animations.protection.timeout){Debug.warn("animations",`Animation timeout for sticker: ${stickerId}`);this.forceCompleteAnimation(sticker);return}if(timeSinceLastUpdate>config.animations.protection.checkInterval){if(sticker.scale!==1||sticker.alpha!==1){Debug.warn("animations",`Possible stuck animation detected for sticker: ${stickerId}`);this.forceCompleteAnimation(sticker);return}}const progress=Math.min(elapsed/config.animations.flyIn.duration,1);const eased=this.easeInOutQuad(progress);const newScale=this.lerp(config.animations.flyIn.initialScale,config.animations.flyIn.finalScale,eased);const newAlpha=this.lerp(config.animations.flyIn.initialAlpha,config.animations.flyIn.finalAlpha,eased);if(sticker.scale!==newScale||sticker.alpha!==newAlpha){sticker.scale=newScale;sticker.alpha=newAlpha;animation.lastUpdateTime=currentTime}if(progress>=1){this.animatingStickers.delete(stickerId)}}))},completeAnimation(sticker){if(this.animatingStickers.has(sticker.id)){sticker.scale=config.animations.flyIn.finalScale;sticker.alpha=config.animations.flyIn.finalAlpha;this.animatingStickers.delete(sticker.id);Debug.debug("animations",`Animation completed normally for sticker: ${sticker.id}`)}},forceCompleteAnimation(sticker){sticker.scale=config.animations.flyIn.finalScale;sticker.alpha=config.animations.flyIn.finalAlpha;this.animatingStickers.delete(sticker.id);Debug.warn("animations",`Forced animation completion for sticker: ${sticker.id}`)},checkAllStickers(){stickers.forEach((sticker=>{if(sticker.scale!==config.animations.flyIn.finalScale||sticker.alpha!==config.animations.flyIn.finalAlpha){Debug.warn("animations",`Found stuck sticker: ${sticker.id}, forcing completion`);this.forceCompleteAnimation(sticker)}}))},lerp(start,end,t){return start*(1-t)+end*t},easeInOutQuad(t){return t<.5?2*t*t:1-Math.pow(-2*t+2,2)/2}};const StickerManager={hasSticker(stickerId){return stickers.some((sticker=>sticker.id===stickerId))},removeSticker(stickerId){const index=stickers.findIndex((sticker=>sticker.id===stickerId));if(index!==-1){const sticker=stickers[index];Composite.remove(engine.world,sticker.body);stickers.splice(index,1);StorageManager.removeSticker(stickerId);return true}return false}};class WebSocketClient{constructor(){this.reconnectAttempts=0;this.maxReconnectAttempts=99999;this.reconnectDelay=1e3;this.connect()}getWebSocketUrl(){const hostname=window.location.hostname;const port=window.location.port;const protocol=window.location.protocol==="https:"?"wss:":"ws:";if(!hostname||hostname==="localhost"||hostname==="127.0.0.1"){return"ws://127.0.0.1:8000/ws/wall"}if(port){return`${protocol}//${hostname}:${port}/ws/wall`}else{return`${protocol}//${hostname}/ws/wall`}}connect(){this.ws=new WebSocket(this.getWebSocketUrl());this.ws.onopen=()=>{Debug.info("network","WebSocket Connected");this.reconnectAttempts=0;this.reconnectDelay=1e3};this.ws.onclose=()=>{if(this.reconnectAttempts<this.maxReconnectAttempts){Debug.warn("network",`WebSocket Reconnecting... Attempt ${this.reconnectAttempts+1}`);setTimeout((()=>this.connect()),this.reconnectDelay);this.reconnectAttempts++;this.reconnectDelay*=2}else{Debug.error("network","WebSocket Failed to connect after maximum attempts")}};this.ws.onerror=error=>{Debug.error("network","WebSocket Error:",error)};this.ws.onmessage=event=>{try{const data=JSON.parse(event.data);Debug.debug("network","Received message:",data);switch(data.type){case"wall_clear":removeAllStickers();break;case"wall_reload":break;case"sticker_add":if(StickerManager.hasSticker(data.data.sticker_id)){Debug.warn("stickers",`Duplicate sticker ignored: ${data.data.sticker_id}`);return}Debug.debug("network","Adding new sticker:",data.data.path);addSticker(data.data.path,data.data.sticker_id);break;case"sticker_remove":Debug.debug("network","Removing sticker:",data.data.sticker_id);removeSticker(data.data.sticker_id);break;default:Debug.warn("network","Unknown sticker action:",data.type);Debug.debug("network","Received message:",data)}}catch(error){Debug.error("network","Error processing message:",error)}}}}const Engine=Matter.Engine,Runner=Matter.Runner,Bodies=Matter.Bodies,Composite=Matter.Composite,Events=Matter.Events;const engine=Engine.create({enableSleeping:config.world.enableSleeping});function resizeCanvas(){canvas.width=window.innerWidth;canvas.height=window.innerHeight;Debug.debug("messages","Canvas Size set:",canvas.width,canvas.height);if(worldWallsCreatedFlag){createWalls()}}window.addEventListener("resize",resizeCanvas);resizeCanvas();const RotationManager={lastValue:null,getRandomRotation(){let value=(Math.random()*.2).toFixed(3);if(this.lastValue===null||this.lastValue<0){value=Math.abs(value)}else{value=-Math.abs(value)}this.lastValue=parseFloat(value);Debug.debug("physics","Random rotation value:",this.lastValue);return this.lastValue}};function createWalls(){if(worldWallsCreatedFlag){Composite.remove(engine.world,worldWalls);worldWalls=[]}const WallGroundBottom=Bodies.rectangle(canvas.width/2,canvas.height,canvas.width,50,{label:"groundBottom",isStatic:true,restitution:config.world.walls.forceRestitution});const WallGroundtop=Bodies.rectangle(canvas.width/2,0,canvas.width,50,{label:"groundTop",isStatic:true,restitution:config.world.walls.forceRestitution});const WallGroundRight=Bodies.rectangle(canvas.width,canvas.height/2,50,canvas.height,{label:"groundRight",isStatic:true,restitution:config.world.walls.forceRestitution});const WallGroundLeft=Bodies.rectangle(0,canvas.height/2,50,canvas.height,{label:"groundLeft",isStatic:true,restitution:config.world.walls.forceRestitution});const WallCenterBlock=Bodies.rectangle(canvas.width/2,canvas.height/2,canvas.width/4,50,{label:"centerBlock",isStatic:true,restitution:config.world.walls.forceRestitution});worldWalls.push(WallGroundBottom);worldWalls.push(WallGroundtop);worldWalls.push(WallGroundRight);worldWalls.push(WallGroundLeft);if(config.world.walls.enableCentralBlock){worldWalls.push(WallCenterBlock)}Composite.add(engine.world,worldWalls);worldWallsCreatedFlag=true;Debug.debug("messages","Walls created")}createWalls();function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min)}function calculateProportionalSize(originalWidth,originalHeight,maxSize){let newWidth,newHeight;if(originalWidth>originalHeight){newWidth=maxSize;newHeight=originalHeight/originalWidth*maxSize}else{newHeight=maxSize;newWidth=originalWidth/originalHeight*maxSize}return{width:Math.round(newWidth),height:Math.round(newHeight)}}function calculateStickerSize(){const stickerPercentage=Math.min(stickers.length/(config.stickers.maxCount-config.stickers.maxCountOffset),1);StickerSize=Math.round(config.stickers.sizeMax-stickerPercentage*(config.stickers.sizeMax-config.stickers.sizeMin));Debug.debug("stickers","Sticker percentage: ",stickerPercentage," Sticker size: ",StickerSize)}function updateAllStickerBodiesSizes(){const bodies=Composite.allBodies(engine.world).filter((body=>!body.isStatic));stickers.forEach(((sticker,index)=>{if(index>=bodies.length)return;const corrected_size=calculateProportionalSize(sticker.img.width,sticker.img.height,StickerSize*config.stickers.hitBoxFactor);const position={...sticker.body.position};const velocity={...sticker.body.velocity};const angle=sticker.body.angle;Composite.remove(engine.world,sticker.body);const newBody=Bodies.rectangle(position.x,position.y,corrected_size.width,corrected_size.height,{restitution:config.stickers.physics.restitution,frictionAir:config.stickers.physics.frictionAir,friction:config.stickers.physics.friction,inertia:Infinity,inverseInertia:config.stickers.physics.inverseInertia});Matter.Body.setPosition(newBody,position);Matter.Body.setAngle(newBody,angle);Matter.Body.setVelocity(newBody,velocity);Composite.add(engine.world,newBody);sticker.body=newBody}))}function addSticker(stickerPath,stickerId){if(StickerManager.hasSticker(stickerId)){Debug.warn("stickers",`Attempt to add duplicate sticker: ${stickerId}`);return}const side=Math.floor(Math.random()*4);let startingX,startingY;switch(side){case 0:startingX=Math.random()*canvas.width;startingY=100;break;case 1:startingX=canvas.width-100;startingY=Math.random()*canvas.height;break;case 2:startingX=Math.random()*canvas.width;startingY=canvas.height-100;break;case 3:startingX=100;startingY=Math.random()*canvas.height;break}Debug.debug("stickers","Starting position: ",startingX,startingY);const img=new Image;img.src=stickerPath;img.onload=()=>{calculateStickerSize();updateAllStickerBodiesSizes();const x=startingX;const y=startingY;const corrected_size=calculateProportionalSize(img.width,img.height,StickerSize*config.stickers.hitBoxFactor);const body=Bodies.rectangle(x,y,corrected_size.width,corrected_size.height,{restitution:config.stickers.physics.restitution,frictionAir:config.stickers.physics.frictionAir,friction:config.stickers.physics.friction,inertia:Infinity,inverseInertia:config.stickers.physics.inverseInertia});const targetX=canvas.width/2;const targetY=canvas.height/2;const angle=Math.atan2(targetY-startingY,targetX-startingX);const speed=config.stickers.physics.initialSpeed;Matter.Body.setVelocity(body,{x:Math.cos(angle)*speed,y:Math.sin(angle)*speed});Matter.Body.setAngle(body,RotationManager.getRandomRotation());Debug.debug("messages","Created sticker at: ",x,y," with angle: ",angle," and speed: ",speed,"");Composite.add(engine.world,body);const stickerObj={id:stickerId,img:img,body:body,scale:config.animations.flyIn.initialScale,alpha:config.animations.flyIn.initialAlpha};stickers.push(stickerObj);StorageManager.saveSticker(stickerObj);AnimationManager.startAnimation(stickerObj)};if(stickers.length>config.stickers.maxCount){const oldSticker=stickers.shift();Composite.remove(engine.world,oldSticker.body);StorageManager.removeSticker(oldSticker.id)}}function removeSticker(stickerId){const index=stickers.findIndex((sticker=>sticker.id===stickerId));if(index!==-1){Composite.remove(engine.world,stickers[index].body);stickers.splice(index,1);StorageManager.removeSticker(stickerId);calculateStickerSize();updateAllStickerBodiesSizes();Debug.debug("stickers",`Removed sticker: ${stickerId}`)}}function restoreStickers(){const storedStickers=StorageManager.getAllStickers();Debug.info("storage",`Restoring ${storedStickers.length} stickers`);removeAllStickers();storedStickers.forEach((storedSticker=>{addSticker(storedSticker.path,storedSticker.id)}))}function removeAllStickers(){stickers.forEach((sticker=>{Matter.World.remove(engine.world,sticker.body)}));stickers=[];StorageManager.clearStickers()}function getRandomGravity(){return Math.random()*.1-.1}function resetGravity(){engine.world.gravity.x=config.world.gravity.x;engine.world.gravity.y=config.world.gravity.y;Debug.debug("physics","Gravity back to default")}function applyRandomGravity(){Debug.debug("physics","Applying random gravity");const gravity=getRandomGravity();engine.world.gravity.x=gravity;engine.world.gravity.y=gravity*-1;setTimeout(resetGravity,1e4)}(function render(){window.requestAnimationFrame(render);canvas_context.clearRect(0,0,canvas.width,canvas.height);AnimationManager.updateAnimations(performance.now());stickers.forEach((sticker=>{const{position:position,angle:angle}=sticker.body;canvas_context.save();canvas_context.translate(position.x,position.y);canvas_context.rotate(angle);const scale=sticker.scale||1;const alpha=sticker.alpha||1;canvas_context.globalAlpha=alpha;canvas_context.scale(scale,scale);const{width:width,height:height}=calculateProportionalSize(sticker.img.width,sticker.img.height,StickerSize);canvas_context.drawImage(sticker.img,-width/2,-height/2,width,height);if(config.debug.showPhysics){canvas_context.restore();canvas_context.save();canvas_context.strokeStyle=config.debug.colors.bounds;canvas_context.lineWidth=1;canvas_context.beginPath();canvas_context.moveTo(sticker.body.bounds.min.x,sticker.body.bounds.min.y);canvas_context.lineTo(sticker.body.bounds.max.x,sticker.body.bounds.min.y);canvas_context.lineTo(sticker.body.bounds.max.x,sticker.body.bounds.max.y);canvas_context.lineTo(sticker.body.bounds.min.x,sticker.body.bounds.max.y);canvas_context.closePath();canvas_context.stroke();canvas_context.fillStyle=config.debug.colors.center;canvas_context.beginPath();canvas_context.arc(position.x,position.y,3,0,Math.PI*2);canvas_context.fill();const velocityScale=10;canvas_context.strokeStyle="#0000ff";canvas_context.beginPath();canvas_context.moveTo(position.x,position.y);canvas_context.lineTo(position.x+sticker.body.velocity.x*velocityScale,position.y+sticker.body.velocity.y*velocityScale);canvas_context.stroke()}if(config.debug.showStickerSize){canvas_context.font="12px Arial";canvas_context.fillStyle=config.debug.colors.text;canvas_context.textAlign="center";canvas_context.textBaseline="top";const sizeText=`${Math.round(width)}x${Math.round(height)}`;canvas_context.fillText(sizeText,0,height/2);const velocity=Math.sqrt(sticker.body.velocity.x*sticker.body.velocity.x+sticker.body.velocity.y*sticker.body.velocity.y).toFixed(2);canvas_context.fillText(`v: ${velocity}`,0,height/2+20)}canvas_context.restore()}));if(config.debug.showWalls){let bodies=Composite.allBodies(engine.world);canvas_context.beginPath();for(let i=0;i<bodies.length;i+=1){let body=bodies[i];if(!body.isStatic&&!config.debug.showBounds)continue;canvas_context.save();canvas_context.beginPath();let vertices=body.vertices;canvas_context.moveTo(vertices[0].x,vertices[0].y);for(let j=1;j<vertices.length;j+=1){canvas_context.lineTo(vertices[j].x,vertices[j].y)}canvas_context.closePath();switch(body.label){case"centerBlock":canvas_context.strokeStyle=config.debug.colors.centerWall||"#ff00ff";canvas_context.fillStyle=config.debug.colors.centerWall+"40"||"#ff00ff40";break;case"groundBottom":case"groundTop":case"groundLeft":case"groundRight":canvas_context.strokeStyle=config.debug.colors.walls;canvas_context.fillStyle=config.debug.colors.walls+"40";break;default:canvas_context.strokeStyle=config.debug.colors.bounds;canvas_context.fillStyle=config.debug.colors.bounds+"40"}canvas_context.lineWidth=3;canvas_context.stroke();canvas_context.fill();if(config.debug.showLabels){canvas_context.fillStyle=config.debug.colors.text;canvas_context.font="18px Arial";canvas_context.textAlign="center";canvas_context.textBaseline="middle";canvas_context.fillText(body.isStatic?body.label:body.id,body.position.x,body.position.y)}canvas_context.restore()}}})();resetGravity();var runner=Runner.create();Runner.run(runner,engine);new WebSocketClient;Events.on(engine,"collisionStart",(event=>{if(!config.world.walls.colisionEffectEnable){return}event.pairs.forEach((pair=>{const bodyA=pair.bodyA;const bodyB=pair.bodyB;if(bodyA.isStatic||bodyB.isStatic){const movingBody=bodyA.isStatic?bodyB:bodyA;const speed=randomIntFromInterval(1,2);const randomAngle=Math.random()*Math.PI*2;Matter.Body.setVelocity(movingBody,{x:Math.cos(randomAngle)*speed,y:Math.sin(randomAngle)*speed})}}))}));document.addEventListener("DOMContentLoaded",(()=>{restoreStickers()}));window.addEventListener("keydown",(event=>{switch(event.key){case"q":config.debug.showPhysics=false;config.debug.showWalls=true;config.debug.showLabels=true;config.debug.showStickerSize=true;config.debug.showBounds=true;break;case"r":config.debug.showPhysics=false;config.debug.showWalls=false;config.debug.showLabels=false;config.debug.showStickerSize=false;config.debug.showBounds=false;break;case"p":config.debug.showPhysics=!config.debug.showPhysics;break;case"s":config.debug.showStickerSize=!config.debug.showStickerSize;break;case"w":config.debug.showWalls=!config.debug.showWalls;break;case"l":config.debug.showLabels=!config.debug.showLabels;break;case"b":config.debug.showBounds=!config.debug.showBounds;break}}));setInterval((()=>{AnimationManager.checkAllStickers()}),config.animations.protection.checkInterval);